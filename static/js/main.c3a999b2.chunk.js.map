{"version":3,"sources":["map.js","App.js","index.js"],"names":["graphWorld","am4core","am4themes_animated","chart","am4maps","geodata","am4geodata_worldLow","e","raiseCriticalError","Error","label","createChild","text","fontSize","align","valign","fill","background","cornerRadius","padding","marginLeft","marginBottom","strokeOpacity","stroke","fillOpacity","dataSource","url","urlTarget","marginTop","projection","Orthographic","panBehavior","zoomControl","homeButton","events","on","goHome","icon","width","path","parent","insertBefore","plusButton","backgroundSeries","mapPolygons","template","polygon","deltaLongitude","deltaLatitude","adapter","add","delatLatitude","fitToRange","shadowPolygonSeries","series","push","am4geodata_continentsLow","useGeodata","dx","dy","polygonSeries","calculateVisualCenter","tooltip","nonScalingStroke","propertyFields","id","tooltipPosition","event","target","dummyData","isHover","hs","states","create","properties","graticuleSeries","mapLines","fitExtent","measelsSeries","autoTextColor","measelTemplate","hs2","each","mapPolygon","count","data","multiPolygon","visualLongitude","visualLatitude","Math","max","log","LN10","tooltipText","dataItem","dataContext","name","App","a","style","height","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3a999b2.chunk.js","sourcesContent":["import * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\r\nimport am4geodata_continentsLow from \"@amcharts/amcharts4-geodata/continentsLow\";\r\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\n\r\n\r\nexport const graphWorld = () =>{\r\n\r\n    am4core.useTheme(am4themes_animated);\r\n \r\n    // Create map instance\r\n    let chart = am4core.create(\"chartdiv\", am4maps.MapChart);\r\n\r\n    \r\n    try {\r\n        chart.geodata = am4geodata_worldLow;\r\n    }\r\n    catch (e) {\r\n        chart.raiseCriticalError(new Error(\"Map geodata could not be loaded. Please download the latest <a href=\\\"https://www.amcharts.com/download/download-v4/\\\">amcharts geodata</a> and extract its contents into the same directory as your amCharts files.\"));\r\n    }\r\n    \r\n    // The data source\r\n    let label = chart.createChild(am4core.Label)\r\n    label.text = \"Bitcoin trading volume on online exchanges in various countries worldwide in 2020\\n(in million U.S. dollars)\";\r\n    label.fontSize = 12;\r\n    label.align = \"left\";\r\n    label.valign = \"bottom\"\r\n    label.fill = am4core.color(\"#927459\");\r\n    label.background = new am4core.RoundedRectangle()\r\n    label.background.cornerRadius(10,10,10,10);\r\n    label.padding(10,10,10,10);\r\n    label.marginLeft = 30;\r\n    label.marginBottom = 30;\r\n    label.background.strokeOpacity = 0.3;\r\n    label.background.stroke =am4core.color(\"#927459\");\r\n    label.background.fill = am4core.color(\"#f9e3ce\");\r\n    label.background.fillOpacity = 0.0;\r\n    \r\n\r\n    // the graph name element\r\n    let dataSource = chart.createChild(am4core.TextLink)\r\n    dataSource.text = \"Source : Statista\";\r\n    dataSource.fontSize = 12;\r\n    dataSource.align = \"left\";\r\n    dataSource.valign = \"top\"\r\n    dataSource.url = \"https://www.statista.com/statistics/1195753/bitcoin-trading-selected-countries/\"\r\n    dataSource.urlTarget = \"_blank\";\r\n    dataSource.fill = am4core.color(\"#927459\");\r\n    dataSource.padding(10,10,10,10);\r\n    dataSource.marginLeft = 30;\r\n    dataSource.marginTop = 30;\r\n    \r\n    // Set projection\r\n    chart.projection = new am4maps.projections.Orthographic();\r\n    chart.panBehavior = \"rotateLongLat\";\r\n    chart.padding(20,20,20,20);\r\n    \r\n    // Add zoom control\r\n    chart.zoomControl = new am4maps.ZoomControl();\r\n    \r\n    let homeButton = new am4core.Button();\r\n    homeButton.events.on(\"hit\", function(){\r\n      chart.goHome();\r\n    });\r\n    \r\n    homeButton.icon = new am4core.Sprite();\r\n    homeButton.padding(7, 5, 7, 5);\r\n    homeButton.width = 30;\r\n    homeButton.icon.path = \"M16,8 L14,8 L14,16 L10,16 L10,10 L6,10 L6,16 L2,16 L2,8 L0,8 L8,0 L16,8 Z M16,8\";\r\n    homeButton.marginBottom = 10;\r\n    homeButton.parent = chart.zoomControl;\r\n    homeButton.insertBefore(chart.zoomControl.plusButton);\r\n    // The background, sea\r\n    chart.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color(\"#2c85ab\");\r\n    chart.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 0.2;\r\n    chart.deltaLongitude = 20;\r\n    chart.deltaLatitude = -20;\r\n    \r\n    // limits vertical rotation\r\n    chart.adapter.add(\"deltaLatitude\", function(delatLatitude){\r\n        return am4core.math.fitToRange(delatLatitude, -90, 90);\r\n    })\r\n    \r\n    // Create map polygon series\r\n    \r\n    let shadowPolygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n    shadowPolygonSeries.geodata = am4geodata_continentsLow;\r\n    \r\n    try {\r\n        shadowPolygonSeries.geodata = am4geodata_continentsLow;\r\n    }\r\n    catch (e) {\r\n        shadowPolygonSeries.raiseCriticalError(new Error(\"Map geodata could not be loaded. Please download the latest <a href=\\\"https://www.amcharts.com/download/download-v4/\\\">amcharts geodata</a> and extract its contents into the same directory as your amCharts files.\"));\r\n    }\r\n    \r\n    shadowPolygonSeries.useGeodata = true;\r\n    shadowPolygonSeries.dx = 2;\r\n    shadowPolygonSeries.dy = 2;\r\n    shadowPolygonSeries.mapPolygons.template.fill = am4core.color(\"#000\");\r\n    shadowPolygonSeries.mapPolygons.template.fillOpacity = 0.2;\r\n    shadowPolygonSeries.mapPolygons.template.strokeOpacity = 0;\r\n    shadowPolygonSeries.fillOpacity = 0.1;\r\n    shadowPolygonSeries.fill = am4core.color(\"#000\");\r\n    \r\n    \r\n    // Create map polygon series\r\n    let polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n    polygonSeries.useGeodata = true;\r\n    \r\n    polygonSeries.calculateVisualCenter = true;\r\n    polygonSeries.tooltip.background.fillOpacity = 0.2;\r\n    polygonSeries.tooltip.background.cornerRadius = 20;\r\n\r\n    // continent\r\n    let template = polygonSeries.mapPolygons.template;\r\n    template.nonScalingStroke = true;\r\n    template.fill = am4core.color(\"#4f8c3e\");\r\n    template.stroke = am4core.color(\"#e2c9b0\");\r\n    \r\n    polygonSeries.calculateVisualCenter = true;\r\n    template.propertyFields.id = \"id\";\r\n    template.tooltipPosition = \"fixed\";\r\n    template.fillOpacity = 1;\r\n    \r\n    template.events.on(\"over\", function (event) {\r\n      if (event.target.dummyData) {\r\n        event.target.dummyData.isHover = true;\r\n      }\r\n    })\r\n    template.events.on(\"out\", function (event) {\r\n      if (event.target.dummyData) {\r\n        event.target.dummyData.isHover = false;\r\n      }\r\n    })\r\n    \r\n    let hs = polygonSeries.mapPolygons.template.states.create(\"hover\");\r\n    hs.properties.fillOpacity = 1;\r\n    hs.properties.fill = am4core.color(\"#deb7ad\");\r\n    \r\n    \r\n    let graticuleSeries = chart.series.push(new am4maps.GraticuleSeries());\r\n    graticuleSeries.mapLines.template.stroke = am4core.color(\"#fff\");\r\n    graticuleSeries.fitExtent = false;\r\n    graticuleSeries.mapLines.template.strokeOpacity = 0.2;\r\n    graticuleSeries.mapLines.template.stroke = am4core.color(\"#fff\");\r\n    \r\n    \r\n    let measelsSeries = chart.series.push(new am4maps.MapPolygonSeries())\r\n    measelsSeries.tooltip.background.fillOpacity = 0;\r\n    measelsSeries.tooltip.background.cornerRadius = 20;\r\n    measelsSeries.tooltip.autoTextColor = false;\r\n    measelsSeries.tooltip.label.fill = am4core.color(\"#fff\");\r\n    measelsSeries.tooltip.dy = -5;\r\n    // Data representation\r\n    let measelTemplate = measelsSeries.mapPolygons.template;\r\n    measelTemplate.fill = am4core.color(\"#e6cf3c\");\r\n    measelTemplate.strokeOpacity = 0;\r\n    measelTemplate.fillOpacity = 0.75;\r\n    measelTemplate.tooltipPosition = \"fixed\";\r\n    \r\n    \r\n    \r\n    let hs2 = measelsSeries.mapPolygons.template.states.create(\"hover\");\r\n    hs2.properties.fillOpacity = 1;\r\n    hs2.properties.fill = am4core.color(\"#86240c\");\r\n    \r\n    polygonSeries.events.on(\"inited\", function () {\r\n      polygonSeries.mapPolygons.each(function (mapPolygon) {\r\n        let count = data[mapPolygon.id];\r\n    \r\n        if (count > 0) {\r\n          let polygon = measelsSeries.mapPolygons.create();\r\n          polygon.multiPolygon = am4maps.getCircle(mapPolygon.visualLongitude, mapPolygon.visualLatitude, Math.max(0.2, Math.log(count) * Math.LN10 / 10));\r\n          polygon.tooltipText = mapPolygon.dataItem.dataContext.name + \": \" + count;\r\n          mapPolygon.dummyData = polygon;\r\n          polygon.events.on(\"over\", function () {\r\n            mapPolygon.isHover = true;\r\n          })\r\n          polygon.events.on(\"out\", function () {\r\n            mapPolygon.isHover = false;\r\n          })\r\n        }\r\n        else {\r\n          mapPolygon.tooltipText = mapPolygon.dataItem.dataContext.name + \": no data\";\r\n          mapPolygon.fillOpacity = 0.9;\r\n        }\r\n    \r\n      })\r\n    })\r\n    \r\n    \r\n    let data = {\r\n//      \"AL\": 504.38,\r\n//      \"AM\": 6.5,\r\n//      \"AO\": 2.98,\r\n      \"AR\": 47.85,// Argentina\r\n//      \"AT\": 10.9,\r\n      \"AU\": 54.78,// Australia\r\n //     \"AZ\": 17.38,\r\n //     \"BA\": 24.45,\r\n//      \"BD\": 13.4,\r\n//      \"BE\": 12.06,\r\n//      \"BF\": 93.37,\r\n//      \"BG\": 1.68,\r\n//      \"BI\": 0.95,\r\n //     \"BJ\": 93.36,\r\n      \"BR\": 25.22,// Brazil\r\n//      \"BT\": 10.03,\r\n//      \"BY\": 26.16,\r\n      \"CA\": 65.56, // Canada\r\n //     \"CD\": 69.71,\r\n //     \"CF\": 4.57,\r\n //     \"CG\": 19.7,\r\n      \"CH\": 7.86, //Switzerland\r\n //     \"CI\": 14.1,\r\n      \"CL\": 23.81,//Chile\r\n//      \"CM\": 41.26,\r\n      \"CN\": 218.26,// China\r\n      \"CO\": 147.50,// Colombia\r\n //     \"CY\": 7.69,\r\n      \"CZ\": 1.1,// Check Republic\r\n      \"DK\": 1.46, // Danemark\r\n      \"DO\": 7.52, //Dominc Republica\r\n  //    \"EE\": 9.91,\r\n //     \"EG\": 0.63,\r\n //     \"ES\": 4.96,\r\n //     \"FI\": 3.27,\r\n //     \"FR\": 43.26,\r\n //     \"GA\": 3.03,\r\n      \"GB\": 193,// United Kingdom\r\n //     \"GE\": 809.09,\r\n  //    \"GH\": 39.78,\r\n  //    \"GM\": 2.45,\r\n  //    \"GN\": 45.98,\r\n  //    \"GQ\": 23.74,\r\n  //    \"GR\": 154.42,\r\n      \"HR\": 0.18, // Croatia\r\n      \"HU\": 0.17, // hungary\r\n      \"ID\": 8.84,//indonesia\r\n  //    \"IE\": 17.56,\r\n  //    \"IL\": 412.24,\r\n      \"IN\": 63.62,// India\r\n  //    \"IQ\": 12.96,\r\n  //    \"IR\": 1.13,\r\n  //    \"IT\": 44.29,\r\n      \"JP\": 6.66,//Japan\r\n      \"KE\": 91.96,// Kenya\r\n //     \"KG\": 253.37,\r\n //     \"KH\": 0.44,\r\n //     \"KM\": 1.26,\r\n      \"KZ\": 4.3,//Kazakhstan\r\n //     \"LA\": 1.33,\r\n //     \"LK\": 0.53,\r\n //     \"LR\": 692.27,\r\n //     \"LS\": 5.9,\r\n//      \"LT\": 14.44,\r\n//      \"LU\": 6.95,\r\n //     \"LV\": 6.09,\r\n      \"MA\": 8.28, // moroco\r\n //     \"MD\": 83.75,\r\n //     \"ME\": 319.75,\r\n  //    \"MG\": 2386.35,\r\n  //    \"MK\": 28.83,\r\n  //    \"ML\": 48.68,\r\n  //    \"MM\": 40.31,\r\n  //    \"MN\": 0.66,\r\n //     \"MR\": 14.65,\r\n //     \"MT\": 11.65,\r\n  //    \"MV\": 9.35,\r\n      \"MX\": 23.47,//Mexico\r\n      \"MY\": 17.04,//malaysia\r\n  //    \"MZ\": 13.49,\r\n //     \"NA\": 12.9,\r\n      \"NE\": 400.08,// Niger\r\n //     \"NG\": 31.44,\r\n  //    \"NL\": 1.47,\r\n      \"NO\": 4.5,//Norway\r\n   //   \"NP\": 10.8,\r\n      \"NZ\": 9.92,// New zealand\r\n      \"PE\": 44.69,// Perou\r\n      \"PH\": 30.77,// Philipine\r\n   //   \"PK\": 12.4,// Pakistan\r\n      \"PL\": 4.08,//Poland\r\n   //   \"PT\": 16.68,\r\n      \"RO\": 4.79,//romania\r\n    //  \"RS\": 473.46,\r\n      \"RU\": 421.38,// Russia\r\n  //    \"RW\": 5.45,\r\n      \"SA\": 7.51, //Saoudi Arabia\r\n      \"SE\": 23.38,//Sweden\r\n      \"SG\": 10.64,// singapour\r\n   //   \"SI\": 3.37,\r\n   //   \"SK\": 112.78,\r\n    //  \"SN\": 3.37,\r\n   //   \"SO\": 8.03,\r\n    //  \"SS\": 19.3,\r\n    //  \"TD\": 75.63,\r\n     // \"TG\": 34.84,\r\n      \"TH\": 27.23,//Tailand\r\n     // \"TL\": 9.46,\r\n     // \"TN\": 7.8,\r\n      \"TR\": 5, //Turkey\r\n      \"TZ\": 3.72, //Tanzania\r\n      \"UA\": 18.02,// Ukraine\r\n     // \"UG\": 62.55,\r\n      \"US\": 1523.6,// United State\r\n     // \"UZ\": 0.99,\r\n     // \"VE\": 179.55,\r\n   //   \"VN\":12.12,\r\n      \"ZA\": 87,// South Africa\r\n //     \"ZM\": 9.82,\r\n//      \"ZW\": 0.06\r\n    }\r\n\r\n\r\n\r\n }","\nimport React, { Component } from 'react';\nimport { graphWorld } from './map';\n\nclass App extends Component {\n  async componentDidMount() {\n     graphWorld()\n     }\n     render(){\n  return (\n      <div id=\"chartdiv\" style={{ width: \"100%\", height: \"600px\" }}></div>\n  );\n}\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}